{"version":3,"sources":["components/NavBar.js","components/Footer.js","components/Layout.js","components/WeatherCard.js","components/ThingsToSee.js","components/WhereToEat.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","to","style","color","React","Component","Footer","marginTop","padding","textAlign","fontSize","href","Layout","backgroundColor","this","props","children","WeatherCard","Today","Date","toLocaleString","weekday","date","toLocaleDateString","year","month","day","Fragment","paddingTop","paddingBottom","city","location","data-feather","temp","tempDescription","ThingsToSee","Row","placeSuggestions","map","place","Col","Card","width","margin","minHeight","Img","height","src","photos","photo_reference","Body","Title","name","Text","formatted_address","Button","onClick","e","event","taskName","preventDefault","addTask","alert","WhereToEat","eat","currentTasks","archivedTasks","App","addToList","push","task","currentTime","alarmTime","setState","taskLists","addRestuarantToList","formRef","createRef","state","cityEntry","restuarants","showModal","archivedTasksList","alarmKey","getPlaceSuggestions","getRestuarants","axios","all","get","then","spread","weather","places","restuarant","data","main","description","sys","country","results","clock","setInterval","setCurrentTime","interval","checkAlarmClock","clearInterval","toLocaleTimeString","hour12","forEach","alarmMessage","changeLocation","res","handleClose","alarmHandler","key","inputAlarmTimeModified","target","value","setAlarmTime","Container","path","exact","render","Form","inline","onSubmit","Label","htmlFor","srOnly","Control","placeholder","onChange","type","current","reset","ref","md","length","onDragEnd","result","destination","newTaskList","Array","from","splice","source","index","reorderedTasks","droppableId","provided","ListGroup","innerRef","droppableProps","draggableId","ListGroupItem","draggableProps","dragHandleProps","float","marginRight","paddingRight","sentToArchive","button","removeTask","removeTaskfromArchive","Modal","show","onHide","Header","closeButton","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71bdbd21.chunk.js","sourcesContent":["import React from 'react'\nimport {Navbar, Nav} from 'react-bootstrap'\nimport { Link } from \"react-router-dom\";\n\nexport default class NavBar extends React.Component {\n    render() {\n       return(\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand>To Do App</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n        <Nav.Link> <Link to=\"/\" style = {{color: \"white\"}}>Task List</Link></Nav.Link>\n        <Nav.Link><Link to=\"/things-to-see\" style = {{color: \"white\"}}>What To See</Link></Nav.Link>\n        <Nav.Link><Link to=\"/where-to-eat\" style = {{color: \"white\"}}>Where To Eat</Link></Nav.Link>\n          \n        </Nav>\n        \n      </Navbar.Collapse>\n    </Navbar>\n       )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div style = {{marginTop: \"100px\", padding: \"50px\", textAlign: \"center\"}}>\n                <p style = {{ color: \"white\", fontSize: \"13px\"}}> \n                Copyright © 2020, All rights reserved. Made in Tampere, Finland for Final Assignment Project at Tampere University of Applied  Sciences. <br/>\n                The photos in this site are fetched from Google Places API and are the properties of Google/Photographers. <br/>\n                Authors: <a href= 'https://github.com/almoyen'>@almoyen</a> and <a href='https://github.com/FAHID-KHAN'>@FAHID-KHAN</a></p>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Footer from './Footer';\n\nexport default class Layout extends Component {\n    render() {\n        return (\n            <div style = {{backgroundColor: \"#0a1f44\"}}>\n\n            {this.props.children}\n\n            <Footer/>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\n\nexport default class WeatherCard extends Component {\n\n    render() {\n        const dateFormat = { year: 'numeric', month: 'long', day: 'numeric' };\n        const Today = new Date().toLocaleString(\"default\", { weekday: \"long\" })\n        const date = new Date().toLocaleDateString(\"en-US\", dateFormat)\n\n        return (\n            <React.Fragment>\n\n<h4 style = {{color:\"white\", paddingTop: \"20px\", paddingBottom: \"20px\"}}> Hello Visitor, Welcome To {this.props.city}!</h4>\n            <div className=\"weathercontainer\">\n  <div className=\"weather-side\">\n    <div className=\"weather-gradient\" />\n    <div className=\"date-container\">\n      <h2 className=\"date-dayname\">{Today}</h2><span className=\"date-day\">{date}</span><span className=\"location\">{this.props.location}</span>\n    </div>\n    <div className=\"weather-container\"><i className=\"weather-icon\" data-feather=\"sun\" />\n      <h1 className=\"weather-temp\">{this.props.temp}°C</h1>\n      <h3 className=\"weather-desc\">{this.props.tempDescription}</h3>\n    </div>\n\n  </div>\n  \n  \n\n</div>\n\n</React.Fragment>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Row, Col, Card, Button} from 'react-bootstrap'\n\n\nexport default class ThingsToSee extends Component {\n\n  \n  \n    render() {\n\n      const addToList = (event, taskName) => {\n        event.preventDefault();\n        this.props.addTask(taskName)\n        alert(\"Task Added To Your To Do List!\")\n\n      }\n        return (\n            \n            <div style = {{marginTop: \"50px\"}} >\n           \n              <h2 style = {{color: \"white\", padding: \"10px\"}}>Things To See in {this.props.location}</h2>\n              <Row>\n              {this.props.placeSuggestions.map(place => {\n                  return <Col>\n                  <Card style={{ width: '18rem', margin: \"10px\", minHeight: \"400px\" }}>\n                  <Card.Img variant=\"top\" style = {{height: \"200px\"}} src= {`https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${place.photos[0].photo_reference}&key=AIzaSyBlaR5cFmeCl98AF_eLTzgavMo70hLQeds`} />\n                  <Card.Body>\n                    <Card.Title>{place.name}</Card.Title>\n                    <Card.Text>\n                      {place.formatted_address} \n                    </Card.Text>\n                    <Button variant=\"primary\" onClick = {(e) => addToList(e, place.name)}> Add To My List</Button>\n                  </Card.Body>\n                  </Card>\n                  </Col>\n                \n              })\n              }\n              </Row>\n       \n            </div>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Row, Col, Card, Button} from 'react-bootstrap'\n\n\nexport default class WhereToEat extends Component {\n\n  \n  \n    render() {\n\n      const addToList = (event, taskName) => {\n        event.preventDefault();\n        this.props.addTask(taskName)\n        alert(\"Task Added To Your To Do List!\")\n\n      }\n        return (\n            \n            <div style = {{marginTop: \"50px\"}}>\n           \n              <h2 style = {{color: \"white\", padding: \"10px\"}}>Where To Eat in {this.props.city}</h2>\n              <Row>\n              {this.props.eat.map(place => {\n                  return <Col>\n                  <Card style={{ width: '18rem', margin: \"10px\", minHeight: \"400px\" }}>\n                  <Card.Img variant=\"top\" style = {{height: \"200px\"}} src= {`https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${place.photos[0].photo_reference}&key=AIzaSyBlaR5cFmeCl98AF_eLTzgavMo70hLQeds`} />\n                  <Card.Body>\n                    <Card.Title>{place.name}</Card.Title>\n                    <Card.Text>\n                      {place.formatted_address} \n                    </Card.Text>\n                    <Button variant=\"primary\" onClick = {(e) => addToList(e, place.name)}> Add To My List</Button>\n                  </Card.Body>\n                  </Card>\n                  </Col>\n                \n              })\n              }\n              </Row>\n       \n            </div>\n\n        )\n    }\n}\n","import './App.css';\nimport React from 'react'\nimport {BrowserRouter as Router, Route,Link} from 'react-router-dom';\nimport {Container, Row, Col, Form, Button, Card, Modal, ListGroup, ListGroupItem} from 'react-bootstrap'\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd'\nimport axios from 'axios'\nimport NavBar from './components/NavBar';\nimport Layout from './components/Layout';\nimport WeatherCard from './components/WeatherCard';\nimport ThingsToSee from './components/ThingsToSee';\nimport WhereToEat from './components/WhereToEat';\n\nexport let currentTasks = [];\nexport let archivedTasks = [];\n\nexport default class App extends React.Component {\n\n\n   constructor(props) {\n        super(props)\n        this.formRef = React.createRef();\n\n    \n        this.state = {\n             temp : '',\n             tempDescription: '',\n             location: \"Tampere, FI\",\n             city: 'Tampere',\n             cityEntry: '',\n             placeSuggestions: [],\n             restuarants: [],\n             taskLists : [],\n             taskName: '',\n             showModal: false,\n             currentTime: '',\n             archivedTasksList: [],\n             alarmKey : ''\n             \n           \n        }\n    }\n\n    componentDidMount() {\n      // Fetching Weather and Google Places Data\n      let getWeather = `http://api.openweathermap.org/data/2.5/weather?q=tampere&units=metric&APPID=494b089ffcd713248e6d62d7d91d25fe`\n      let getPlaceSuggestions = `/maps/api/place/textsearch/json?query=things-to-see-${this.state.city}&key=AIzaSyBlaR5cFmeCl98AF_eLTzgavMo70hLQeds`\n      let getRestuarants = `/maps/api/place/textsearch/json?query=restuarants-in-${this.state.city}&key=AIzaSyBlaR5cFmeCl98AF_eLTzgavMo70hLQeds`\n      axios.all([\n        axios.get(getWeather),\n        axios.get(getPlaceSuggestions),\n        axios.get(getRestuarants)\n      ])\n      .then(axios.spread((weather, places, restuarant) => {\n        this.setState({\n          temp: weather.data.main.temp,\n          tempDescription: weather.data.weather[0].description,\n          location: `${weather.data.name}, ${weather.data.sys.country}`,\n          placeSuggestions: places.data.results,\n          restuarants: restuarant.data.results\n          \n        }\n        );\n      }))\n\n      // Setting current time for the alarm clock\n      this.clock = setInterval(\n        () => this.setCurrentTime(),\n        1000\n      )\n      this.interval = setInterval(\n        () => this.checkAlarmClock(),\n      1000)\n      \n  }\n\n\n  componentWillUnmount(){\n    \n    //clearing the alarm clock\n\n    clearInterval(this.clock);\n    clearInterval(this.interval);\n  }\n\n  // setting the current time in standard format\n  setCurrentTime(){\n    this.setState({\n      currentTime: new Date().toLocaleTimeString('en-US', { hour12: false })\n    });\n  }\n\n // alarm clock will be checked continously in the background\n  checkAlarmClock(){\n    this.state.taskLists.forEach(task => {\n      if(task.alarmTime === 'undefined' || !task.alarmTime) {\n        this.alarmMessage = \"Please set your alarm.\";\n      } else {\n        this.alarmMessage = \"Your alarm is set for \" + task.alarmTime + \".\";\n        if(this.state.currentTime === task.alarmTime) {\n          alert(`It's time for the task: ${task.task}`);\n          task.alarmTime = null;\n        } else {\n        }\n      }  \n    }) \n  }\n\n// Method for adding a Place to visit in the To do list.\n  addToList = (taskName) => {\n    currentTasks.push({task: 'Visit ' + taskName, currentTime: '', alarmTime: '' })\n    this.setState({taskLists: currentTasks})\n    \n  }\n\n  // Method for adding a restuarant\n\n  addRestuarantToList = (taskName) => {\n    currentTasks.push({task: 'Eat at ' + taskName, currentTime: '', alarmTime: '' })\n    this.setState({taskLists: currentTasks})\n    \n  }\n\n\n  render() {\n\n    // Function for changing location, data is fetched again everytime location changes.\n\n    const changeLocation = (e) => {\n      e.preventDefault();\n      \n      // Fetching New Weather Data\n      axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.cityEntry}&units=metric&APPID=494b089ffcd713248e6d62d7d91d25fe`)\n      .then(res => {\n          this.setState(\n              {\n                  temp: res.data.main.temp,\n                  tempDescription: res.data.weather[0].description,\n                  location: `${res.data.name}, ${res.data.sys.country}`,\n                  city: res.data.name\n              });\n          \n      })\n\n      // Fetching new Places data.\n\n      axios.get(`/maps/api/place/textsearch/json?query=things-to-see-${this.state.cityEntry}&key=AIzaSyBlaR5cFmeCl98AF_eLTzgavMo70hLQeds`)\n    .then(res => \n      this.setState({placeSuggestions: res.data.results})\n      )\n\n      // Fetching new Restuarants\n\n      axios.get(`/maps/api/place/textsearch/json?query=restuarants-in-${this.state.cityEntry}&key=AIzaSyBlaR5cFmeCl98AF_eLTzgavMo70hLQeds`)\n    .then(res => \n      this.setState({restuarants: res.data.results})\n      )\n  }\n\n  // Function for setting alarm time and updating the state in the task list.\n  const setAlarmTime = (event, key) => {\n    event.preventDefault();\n    const inputAlarmTimeModified = event.target.value + ':00'\n    currentTasks[key].alarmTime = inputAlarmTimeModified\n    this.setState({\n    taskLists: currentTasks\n    })\n\n  }\n\n // Closing the Modal after alarm is set.\n\n  const handleClose = () => this.setState({showModal: false});\n\n  // Add new Task to do List\n\n  const addTasks = (e) => {\n    e.preventDefault()\n\n      if (this.state.taskName === \"\") {\n        alert(\"Task Name can not be empty!\")\n      }\n\n      else {\n       \n        currentTasks.push({task: this.state.taskName, currentTime: '', alarmTime: '' })\n        \n        this.setState({taskLists: currentTasks})\n        this.formRef.current.reset();\n      }\n        \n    }\n\n    // Remove a task from To do list\n    const removeTask = (event, key) => {\n      event.preventDefault()\n        currentTasks.splice(key, 1)\n        this.setState({taskLists: currentTasks})\n    }\n\n    // Remove from \"Completed Tasks\" archive.\n\n    const removeTaskfromArchive = (key) => {\n      archivedTasks.splice(key, 1)\n      this.setState({archivedTasksList: archivedTasks})\n  }\n\n  // Function for what happens when a user drags an element\n   const onDragEnd = result => {\n    if (!result.destination) return;\n      const newTaskList = Array.from(this.state.taskLists);\n      const [reorderedTasks] = newTaskList.splice(result.source.index, 1);\n      newTaskList.splice(result.destination.index, 0, reorderedTasks);\n      currentTasks = newTaskList\n      this.setState({taskLists: currentTasks});\n      \n    }\n\n    // Handling the alarm inside Modal\n\n    const alarmHandler = (event, key) => {\n      event.preventDefault();\n      setAlarmTime(event, key)\n    }\n\n    // Tasks are sent to archive once done.\n\n    const sentToArchive = (event, value, key) => {\n      event.preventDefault();\n      currentTasks.splice(key, 1)\n      archivedTasks.push(value)\n      this.setState({\n        taskLists: currentTasks,\n        archivedTasksList: archivedTasks \n\n      })\n\n    }\n\n  return (\n    <Router>\n     <NavBar/>\n     <Layout>\n     <Container > \n      <Row>\n        <Col>\n        <Route path = '/' exact render={() => \n        <WeatherCard \n      temp = {this.state.temp}\n      tempDescription = {this.state.tempDescription}\n      location = {this.state.location}\n      city = {this.state.city} \n      />}\n/>\n<Route path = '/' exact render={() => \n      <div style = {{paddingTop: \"20px\"}}>  \n  <Form inline onSubmit = {changeLocation}>\n  <Form.Label htmlFor=\"inlineFormInputName2\" srOnly>\n    Name\n  </Form.Label>\n  <Form.Control\n    className=\"mb-2 mr-sm-2\"\n    id=\"inlineFormInputName2\"\n    placeholder=\"Tampere\" onChange = {(e) => this.setState({cityEntry: e.target.value})}\n  />\n<Button type=\"submit\" className=\"mb-2\">\n  Change Location\n  </Button>\n  </Form>\n  \n  </div>\n}/>\n      </Col>\n      <Col>\n      <Route path='/' exact>\n      <div>\n<p style = {{color: 'white', marginTop: \"50px\"}}> Not sure what to do today in {this.state.city}? Check out <Link to= '/things-to-see'>What To See</Link> and <a href = '/where-to-eat'>Where To Eat</a> pages!</p>\n<Card style = {{marginTop: \"20px\"}}>\n<Card.Body>\n<Card.Title>What do you want to do today?</Card.Title>\n<Form onSubmit = {addTasks} ref={this.formRef} >\n<Form.Row>\n<Col>\n<Form.Control placeholder=\"Task Name\" onChange = {(e) => this.setState({taskName: e.target.value})} />\n</Col>\n<Col md = \"auto\">\n<Button type = \"submit\" variant=\"primary\">Add Task</Button>\n</Col>\n</Form.Row>\n</Form>\n{this.state.taskLists.length > 0 ?\n\n<DragDropContext onDragEnd = {(result) => onDragEnd(result)} >\n<Droppable droppableId = \"drop\" >\n{(provided) => (\n<ListGroup className=\"list-group-flush\" style = {{paddingTop: \"30px\"}} ref = {provided.innerRef} {...provided.droppableProps}>\n{this.state.taskLists.map((value, key) => {\nreturn <React.Fragment>\n\n<Draggable key = {key} draggableId = {`${key}`} index = {key}>\n{(provided) => (\n<ListGroupItem \n{...provided.draggableProps} \n{...provided.dragHandleProps} \nref = {provided.innerRef} \n> \n<i className=\"fas fa-bars\" style = {{color: \"black\", float: \"left\", marginRight: \"20px\"}}/>\n{value.task}\n<div style = {{float: \"right\"}}>\n<button className = 'link-button' style = {{paddingRight: \"10px\"}} onClick ={()=>  this.setState({showModal: true, alarmKey: key})}>\n<i className=\"far fa-clock\" style = {{color: \"black\", paddingRight: \"5px\"}} \n/> \n{value.alarmTime}\n</button>\n<button className = 'link-button' style = {{paddingRight: \"15px\"}} onClick ={(e)=>  sentToArchive(e, value, key)}>\n<i className=\"far fa-check-square\" style = {{color: \"green\"}}/>\n</button>\n<button button className = 'link-button'>\n<i style = {{color: 'red'}} \nonClick = {(e) => removeTask(e, key)} className=\" fas fa-trash-alt\" /> </button>\n</div>\n</ListGroupItem>\n)}\n</Draggable>\n</React.Fragment>\n})\n}\n{provided.placeholder}\n</ListGroup>\n)}\n</Droppable>\n</DragDropContext>\n\n: <p style = {{margin: \"30px\"}}> No Upcoming Tasks, Add a Task Above!</p>\n\n}\n\n</Card.Body>\n</Card>\n\n{/* Archived Tasks */}\n\n<Card style = {{marginTop: \"30px\"}}>\n<Card.Body>\n<Card.Title>Tasks Completed</Card.Title>\n{this.state.archivedTasksList.length > 0 ?\nthis.state.archivedTasksList.map((value, key) => {\nreturn <ListGroup>\n<ListGroupItem> {value.task} \n<div style = {{float: \"right\"}}>\n<button className = 'link-button' >\n<i style = {{color: 'red'}} \nonClick = {() => removeTaskfromArchive(key)} className=\" fas fa-trash-alt\" /> </button>\n</div>\n\n</ListGroupItem>\n</ListGroup>\n})\n: <p style = {{margin: \"30px\"}}> No Completed Tasks, Finish a Task to see here!</p>\n\n}\n</Card.Body>\n</Card>\n</div>\n\n      </Route>\n    \n    </Col>\n    </Row>\n    <Modal show={this.state.showModal} onHide={handleClose}>\n<Modal.Header closeButton>\n  <Modal.Title>Set an Alarm This Task</Modal.Title>\n</Modal.Header>\n<Modal.Body> \n\n<h2>It is {this.state.currentTime}.\n</h2>\n<h2>{this.alarmMessage}\n</h2>\n<Form>\n  <input type=\"time\" onChange={(e) => alarmHandler(e, this.state.alarmKey)}></input>\n</Form>\n\n</Modal.Body>\n<Modal.Footer>\n \n  <Button variant=\"primary\" onClick={handleClose}>\n    Close\n  </Button>\n</Modal.Footer>\n</Modal>\n\n      <Route\nexact path='/things-to-see'\nrender={() => <ThingsToSee\n  location = {this.state.location}\n  city = {this.state.city}\n  placeSuggestions = {this.state.placeSuggestions}\n  addTask = {this.addToList}\n\n  />}\n/>\n<Route path = '/where-to-eat' exact>\n<WhereToEat eat = {this.state.restuarants} city = {this.state.city} addTask = {this.addRestuarantToList}/>\n</Route>\n    </Container>\n    </Layout>\n    </Router>\n    \n  );\n}}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}